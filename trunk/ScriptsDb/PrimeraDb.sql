/******************************************************************************/
/****      Generated by IBExpert 2007.07.20 03/03/2008 05:37:44 p.m.       ****/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES NONE;

CREATE DATABASE 'localhost:facturanet'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 4096
DEFAULT CHARACTER SET NONE;



/******************************************************************************/
/****                               Domains                                ****/
/******************************************************************************/

CREATE DOMAIN D_BOOL AS
CHAR(1)
default 'F'
NOT NULL
check(value in ('T', 'F'));

CREATE DOMAIN D_DESCRIPICION AS
VARCHAR(255)
NOT NULL;

CREATE DOMAIN D_ELIMINADO AS
INTEGER
default 0
NOT NULL;

CREATE DOMAIN D_FECHA AS
TIMESTAMP
DEFAULT 'NOW'
NOT NULL;

CREATE DOMAIN D_ID AS
INTEGER;

CREATE DOMAIN D_NOMBRE AS
VARCHAR(20)
NOT NULL;



/******************************************************************************/
/****                              Generators                              ****/
/******************************************************************************/

CREATE GENERATOR GEN_TS_USUARIOS_ID;
SET GENERATOR GEN_TS_USUARIOS_ID TO 0;



/******************************************************************************/
/****                              Exceptions                              ****/
/******************************************************************************/

CREATE EXCEPTION EX_OPERACION_NO_VALIDA '';



SET TERM ^ ; 



/******************************************************************************/
/****                          Stored Procedures                           ****/
/******************************************************************************/

CREATE PROCEDURE SPS_LST_USUARIOS
RETURNS (
    NB_USUARIO VARCHAR(20),
    DES_USUARIO VARCHAR(255))
AS
BEGIN
  SUSPEND;
END^


CREATE PROCEDURE SPS_NEW_USUARIO (
    NB_USUARIO VARCHAR(20),
    DES_USUARIO VARCHAR(255),
    CLAVE VARCHAR(64))
AS
BEGIN
  EXIT;
END^


CREATE PROCEDURE SPS_VRF_USUARIO (
    NB_USUARIO VARCHAR(20),
    CLAVE VARCHAR(64))
RETURNS (
    ROL INTEGER)
AS
BEGIN
  SUSPEND;
END^



SET TERM ; ^


/******************************************************************************/
/****                                Tables                                ****/
/******************************************************************************/



CREATE TABLE TS_USUARIOS (
    ID_USUARIO   D_ID NOT NULL,
    NB_USUARIO   D_NOMBRE,
    DES_USUARIO  D_DESCRIPICION,
    CLAVE        VARCHAR(64) NOT NULL,
    ELIMINADO    D_ELIMINADO
);




/******************************************************************************/
/****                          Unique Constraints                          ****/
/******************************************************************************/

ALTER TABLE TS_USUARIOS ADD CONSTRAINT UNQ1_TS_USUARIOS UNIQUE (NB_USUARIO, ELIMINADO);


/******************************************************************************/
/****                             Primary Keys                             ****/
/******************************************************************************/

ALTER TABLE TS_USUARIOS ADD CONSTRAINT PK_TS_USUARIOS PRIMARY KEY (ID_USUARIO);


/******************************************************************************/
/****                               Triggers                               ****/
/******************************************************************************/


SET TERM ^ ;


/******************************************************************************/
/****                         Triggers for tables                          ****/
/******************************************************************************/



/* Trigger: TS_USUARIOS_BI */
CREATE TRIGGER TS_USUARIOS_BI FOR TS_USUARIOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID_USUARIO IS NULL) THEN
    NEW.ID_USUARIO = GEN_ID(GEN_TS_USUARIOS_ID,1);
END
^


SET TERM ; ^



/******************************************************************************/
/****                          Stored Procedures                           ****/
/******************************************************************************/


SET TERM ^ ;

ALTER PROCEDURE SPS_LST_USUARIOS
RETURNS (
    NB_USUARIO VARCHAR(20),
    DES_USUARIO VARCHAR(255))
AS
begin
    for select
        TS_USUARIOS.NB_USUARIO,
        TS_USUARIOS.DES_USUARIO
    from 
        TS_USUARIOS
    where 
        TS_USUARIOS.ELIMINADO = 0
    into    
        :NB_USUARIO,
        :DES_USUARIO
    do
        suspend;
end
^

ALTER PROCEDURE SPS_NEW_USUARIO (
    NB_USUARIO VARCHAR(20),
    DES_USUARIO VARCHAR(255),
    CLAVE VARCHAR(64))
AS
begin
    insert into TS_USUARIOS (
        TS_USUARIOS.NB_USUARIO,
        TS_USUARIOS.DES_USUARIO,
        TS_USUARIOS.CLAVE)
    values (
        :NB_USUARIO,
        :DES_USUARIO,
        :CLAVE);
end
^

ALTER PROCEDURE SPS_VRF_USUARIO (
    NB_USUARIO VARCHAR(20),
    CLAVE VARCHAR(64))
RETURNS (
    ROL INTEGER)
AS
begin
    if (exists(
        select *
        from
            TS_USUARIOS
        where
            TS_USUARIOS.ELIMINADO = 0
            and TS_USUARIOS.NB_USUARIO = :NB_USUARIO
            and TS_USUARIOS.CLAVE = :CLAVE
    )) then
        ROL = 1;
    else
        ROL = 0;
end
^


SET TERM ; ^


/* Parameters descriptions */

DESCRIBE PARAMETER ROL PROCEDURE SPS_VRF_USUARIO
'0 NO TIENE PERMISOS';


